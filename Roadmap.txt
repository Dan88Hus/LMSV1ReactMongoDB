Client Setup
    NextJs client 
    Bootstrap and ant design
        npm i bootstrap ant
        _app.js is global variables
    Pages
    Ant menu and icons
    Register page
Server Setup
    Server setup
        npm i express mongoose cors dotenv nodemon jsonwebtoken bcrypt morgan
    Express
    Routes
    Controllers
    Mongo atlas or local install
    Mongoose connect
    Axios post request
        npm i axios
    User Schema model
    Bcrypt helper functions
Registration
    register page of NextJs
    toast install
    loading spinner 
    .env.local
        .env.local olarak kullaniyoruz nexjs de yoksa serverdakini aliyor
        .env.public ise public olarak kullaniliyor
        ama front end de yazarken process.env olarak belirtiyoruz sadece. local yok

    custom next dev
        required in dev mode , cos we will use cookie based dev server, JSONWEBTOKEN will be used
        to use cookies , we need have both client and server running on same domain
        we need to use proxy for that bcs our client/next is running on 3000 and server is running on 8000
        to use proxy we need to create custom server (only dev mode)
        in production, we will use same oprigin/domain so we sont have to worry about it 
        we can simply run build then start next app 
            client side da server.js olusturduk
            npm i http-proxy-middleware
            package.json da npm run dev yapiyorduk daha onceden ("dev": "next dev")
            simdi ise yine npm run dev ama script teki ("dev": "node server.js") ile calistiracaz.
            register page deki post(`${process.env.NEXT_PUBLIC_API}/register` da
                post(`/api/register` olacak
    active nav links
Login
    login page 
        we will use context and useReducer in this way we can create our redux 
        cookie will save token , hearders da yer aliyor 
    login backend updated
        first check if user password is correct?
        take user password hash it and then compare it with hashed password saved in db
        then we need to generate json web token/JWT and send to client
        it will be used to access protected routes 
            npm i jsonwebtoken
            created secret in .env at server side 
    Context, Global state
        context api,
        dispatch user,
        save user to local storage 
        logout 
        conditional nav link 
        protecting pages,
        handling expired token using axios interceptors,
            axios interceptors are like middleware in express 
        csrf token ,
            cookie based auth larda risk
                req te tokrn atiyor ve response ile karsilastiriyor
            npm i csurf
        verify token,
            we do create middleware for this
                npm i express-jwt
        protected page,
            user.js only allowed for logged user
        userRoute
            this will protect children 
    AWS IAM
        AWS setup user
        1 year free tier (from AWS console)
            AWS SES (Simple EMail Service)
            AWS S3 (simple storage, vodeo files and images)
        Login to AWS 
    sending email 
        npm i aws-sdk in server 
    forgot password
        to generate secret code we use
        npm i nanoid
    send email to reset password 
    reset password client 
    reset password server 
stripe onboarding
    stripe setup 
    user sidebar nav 
    conditional llinks pages 
    become instructor page 
    stripe account link onboarding
        npm i stripe query-string  in server 
    stripe onboarding client 
    stripe callback page 
    user account status from stripe
current instructor and protected routes 
    dispatch updated user info to context 
    current instructor server 
    instructor protected routes 
    active nav links 
create course (form)
    create course form 
    create course component 
    price dropdown category
AWS s3 Image Upload
    image Preview
    image resize client
        npm i react-image-file-resizer
    AWS s3 Bucket policy 
    upload image to s3 
    image remove client 
    delete image s3 server 
save course and instructor access 
    course Schema 
        in here we created course schema aas lesson schema but lesson schema is array item of course schema
    instructor middleware and create endpoint 
    save courses in db 
    instructor courses in dashboard 
    instructor course list 
    single course view for instructor 
    single course view 
    display markdown context 
        npm i react-markdown
AWS s3 VIDEO upload and lessons
    add lesson modal
    add lesson form 
    video upload button 
    send video upload using form data
        we will send video to back end as new formData("video", data)
    upload video to s3 
        and we will read formData by express-formidable library
        it behaves as middleware
    remove vide request
    remove video from s3 
    only instructor can upload and delete videos
    add lesson 
    rendering lessons as list items 


    
    
 








